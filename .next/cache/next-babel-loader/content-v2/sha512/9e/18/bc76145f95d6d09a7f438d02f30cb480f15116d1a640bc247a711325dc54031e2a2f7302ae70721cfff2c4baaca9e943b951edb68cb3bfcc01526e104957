{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\NextJs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId].js\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.meetupData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n      children: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Skmishra:Ak8ORlZe2k4CNuMY@apireact.ytdosin.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(contex) {\n  const meetupId = contex.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Skmishra:Ak8ORlZe2k4CNuMY@apireact.ytdosin.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedData = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: selectedData\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["MongoClient","MeetupDetails","props","meetupData","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","contex","selectedData","findOne"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,4BAEE;AAAA,gBAAKA,KAAK,CAACC,UAAN,CAAiBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAUF,KAAK,CAACC,UAAN,CAAiBE;AAA3B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAIH,KAAK,CAACC,UAAN,CAAiBG;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AACD,OAAO,eAAeC,cAAf,CAA8BC,MAA9B,EAAsC;AAC3C,QAAMH,QAAQ,GAAGG,MAAM,CAACJ,MAAP,CAAcC,QAA/B;AACA,QAAMf,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,YAAY,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA3B;AACA,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEwB;AADP;AADF,GAAP;AAKD;AACD,eAAe1B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <section className=\"detail\">\r\n      {/* <img src={props.meetupData.image} alt=\"1st meetUp\" /> */}\r\n      <h1>{props.meetupData.title}</h1>\r\n      <address>{props.meetupData.address}</address>\r\n      <p>{props.meetupData.description}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Skmishra:Ak8ORlZe2k4CNuMY@apireact.ytdosin.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(contex) {\r\n  const meetupId = contex.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Skmishra:Ak8ORlZe2k4CNuMY@apireact.ytdosin.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedData = await meetupsCollection.findOne({ _id: meetupId });\r\n  return {\r\n    props: {\r\n      meetupData: selectedData,\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}